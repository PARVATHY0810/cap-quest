<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            padding: 3rem;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 500px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        h2 {
            color: #2d3748;
            text-align: center;
            margin-bottom: 2rem;
            font-size: 2rem;
            font-weight: 600;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            position: relative;
        }

        h2::after {
            content: '';
            display: block;
            width: 60px;
            height: 4px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0.5rem auto;
            border-radius: 2px;
        }

        .form-group {
            margin-bottom: 2rem;
        }

        label {
            display: block;
            margin-bottom: 0.75rem;
            color: #4a5568;
            font-weight: 500;
            font-size: 0.95rem;
        }

        .otp-container {
            display: flex;
            gap: 12px;
            margin-bottom: 1.5rem;
            justify-content: center;
        }

        .otp-input {
            width: 50px;
            height: 50px;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            text-align: center;
            font-size: 1.25rem;
            font-weight: 600;
            transition: all 0.3s;
            background: white;
        }

        .otp-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15);
            outline: none;
        }

        .password-group {
            position: relative;
            margin-bottom: 0.5rem;
        }

        .password-input {
            width: 100%;
            padding: 1rem;
            padding-right: 45px;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s;
            background: white;
        }

        .password-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.15);
            outline: none;
        }

        .toggle-password {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #667eea;
            font-size: 1.1rem;
            z-index: 10;
            transition: all 0.3s;
        }

        .toggle-password:hover {
            color: #764ba2;
        }

        .validation-box {
            background: #f8fafc;
            padding: 1.25rem;
            border-radius: 12px;
            margin-top: 1rem;
            border: 1px solid #e2e8f0;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .validation-item {
            display: flex;
            align-items: center;
            margin: 0.75rem 0;
            font-size: 0.9rem;
            color: #4a5568;
        }

        .validation-icon {
            margin-right: 0.75rem;
            font-size: 1rem;
        }

        .valid-icon {
            color: #48bb78;
        }

        .invalid-icon {
            color: #f56565;
        }

        button {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            margin-top: 1rem;
            box-shadow: 0 4px 6px rgba(102, 126, 234, 0.25);
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 7px 14px rgba(102, 126, 234, 0.3);
        }

        button:active {
            transform: translateY(0);
        }

        #message {
            text-align: center;
            margin-top: 1rem;
            padding: 0.75rem;
            border-radius: 8px;
            font-size: 0.9rem;
        }

        .error-message {
            background: #fff5f5;
            color: #c53030;
            border: 1px solid #feb2b2;
        }

        .success-message {
            background: #f0fff4;
            color: #2f855a;
            border: 1px solid #9ae6b4;
        }

        /* Animation for validation icons */
        .validation-icon {
            transition: all 0.3s;
        }

        .validation-icon.fa-check {
            animation: checkmark 0.3s ease-in-out;
        }

        @keyframes checkmark {
            0% { transform: scale(0); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
    </style>
</head>

<!-- Rest of the HTML remains the same -->
<body>
    <div class="container">
        <h2>Reset Password</h2>
        <form id="resetPasswordForm">
            
            <div class="form-group">
                <label>Enter OTP Code</label>
                <div class="otp-container">
                    <input type="text" class="otp-input" maxlength="1" data-index="1">
                    <input type="text" class="otp-input" maxlength="1" data-index="2">
                    <input type="text" class="otp-input" maxlength="1" data-index="3">
                    <input type="text" class="otp-input" maxlength="1" data-index="4">
                    <input type="text" class="otp-input" maxlength="1" data-index="5">
                    <input type="text" class="otp-input" maxlength="1" data-index="6">
                </div>
            </div>

            <div class="form-group">
                <label for="newPassword">New Password</label>
                <div class="password-group">
                    <input type="password" id="newPassword" class="password-input" required>
                    <i class="toggle-password fas fa-eye" data-target="newPassword"></i>
                </div>
                <div class="validation-box">
                    <div class="validation-item" data-requirement="length">
                        <i class="validation-icon fas fa-times"></i>
                        At least 8 characters
                    </div>
                    <div class="validation-item" data-requirement="uppercase">
                        <i class="validation-icon fas fa-times"></i>
                        One uppercase letter
                    </div>
                    <div class="validation-item" data-requirement="lowercase">
                        <i class="validation-icon fas fa-times"></i>
                        One lowercase letter
                    </div>
                    <div class="validation-item" data-requirement="number">
                        <i class="validation-icon fas fa-times"></i>
                        One number
                    </div>
                    <div class="validation-item" data-requirement="special">
                        <i class="validation-icon fas fa-times"></i>
                        One special character
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <div class="password-group">
                    <input type="password" id="confirmPassword" class="password-input" required>
                    <i class="toggle-password fas fa-eye" data-target="confirmPassword"></i>
                </div>
                <div class="validation-box">
                    <div class="validation-item" data-requirement="match">
                        <i class="validation-icon fas fa-times"></i>
                        Passwords match
                    </div>
                </div>
            </div>

            <button type="submit" id="submitBtn">Reset Password</button>
            <div id="message"></div>
        </form>
    </div>
<!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Previous OTP handling code remains the same

            // Password visibility toggle
            document.querySelectorAll('.toggle-password').forEach(icon => {
                icon.addEventListener('click', () => {
                    const targetId = icon.getAttribute('data-target');
                    const input = document.getElementById(targetId);
                    
                    if (input.type === 'password') {
                        input.type = 'text';
                        icon.classList.remove('fa-eye');
                        icon.classList.add('fa-eye-slash');
                    } else {
                        input.type = 'password';
                        icon.classList.remove('fa-eye-slash');
                        icon.classList.add('fa-eye');
                    }
                });
            });

            // Password validation
            const newPassword = document.getElementById('newPassword');
            const confirmPassword = document.getElementById('confirmPassword');
            
            function validatePassword() {
                const password = newPassword.value;
                const validations = {
                    length: password.length >= 8,
                    uppercase: /[A-Z]/.test(password),
                    lowercase: /[a-z]/.test(password),
                    number: /[0-9]/.test(password),
                    special: /[^A-Za-z0-9]/.test(password),
                    match: password === confirmPassword.value && password !== ''
                };

                Object.entries(validations).forEach(([requirement, isValid]) => {
                    const item = document.querySelector(`[data-requirement="${requirement}"] .validation-icon`);
                    if (item) {
                        item.className = `validation-icon fas ${isValid ? 'fa-check valid-icon' : 'fa-times invalid-icon'}`;
                    }
                });

                return Object.values(validations).every(v => v);
            }

            newPassword.addEventListener('input', validatePassword);
            confirmPassword.addEventListener('input', validatePassword);

            // Form submission
            const form = document.getElementById('resetPasswordForm');
           
            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                const newPasswords=document.getElementById("confirmPassword").value
                const response = await fetch('/new-password', {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ password: newPasswords })
        });
        const data=await response.json()
        if(data.success){
            Swal.fire({
  title: "The Internet?",
  text: "That thing is still around?",
  icon: "success"
}).then(()=>window.location.href="/login")
        }
                if (!validatePassword()) {
                    showMessage('Please meet all password requirements', 'error');
                    return;
                }

                // Rest of the submission code remains the same
                // ... (previous AJAX submission code)
            });

            // Previous helper functions (showMessage, setLoading) remain the same
        });
    </script>
</body>
</html>