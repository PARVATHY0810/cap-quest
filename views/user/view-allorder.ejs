<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <!-- Bootstrap CSS CDN -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <%- include('../../views/partials/user/header') %>
    <style>
        .order-details {
            max-width: 1000px;
            margin: 0 auto;
        }
        .product-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
        }
        .order-status {
            font-size: 1.1rem;
            font-weight: 600;
        }
        .order-summary {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 20px;
        }
        .summary-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
        }
        .summary-total {
            font-weight: bold;
            border-top: 1px solid #dee2e6;
            padding-top: 15px;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container my-5">
        <div class="order-details">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Order Details</h2>
                <span class="order-id">#<%= orders[0]._id %></span>
            </div>

            <!-- Order Status and Actions -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Order Status</h5>
                            <p>Order Date: <%= orders[0].Date %></p>
                        </div>
                        <div class="col-md-6 text-md-end">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Shipping Address -->
            <div class="card mb-4">
              <div class="card-header">
                  <h5 class="mb-0">Shipping Address</h5>
              </div>
              <div class="card-body">
                  <% if (orders[0].address) { %>
                      <p><strong>Name:</strong> <%= orders[0].address.name %></p>
                      <p><strong>Phone:</strong> <%= orders[0].address.phone %></p>
                      <p><strong>Address Type:</strong> <%= orders[0].address.addressType || 'Not specified' %></p>
                      <p><strong>City:</strong> <%= orders[0].address.city %></p>
                      <p><strong>Landmark:</strong> <%= orders[0].address.landmark %></p>
                      <p><strong>State:</strong> <%= orders[0].address.state %></p>
                      <p><strong>Pincode:</strong> <%= orders[0].address.pincode %></p>
                  <% } else { %>
                      <p style="color: red;">Address not available</p>
                  <% } %>
              </div>
          </div>
          
          
            <input type="hidden" value="<%= orders[0]._id %>" id="orderId">

            <!-- Order Items -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Order Items</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-borderless mb-0">
                            <thead class="bg-light">
                                <tr>
                                    <th scope="col">Product</th>
                                    <th scope="col">Details</th>
                                    <th scope="col" class="text-center">Quantity</th>
                                    <th scope="col" class="text-end">Price</th>
                                    <th scope="col" class="text-end">Total</th>
                                    <th>Action</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% orders[0].orderItems.forEach(element => { %> 
                                  <tr> 
                                    <td> 
                                      <img src="/uploads/re-image/<%= element.productImage %>" alt="" class="product-image"> 
                                    </td> 
                                    <td> 
                                      <h6 class="mb-0"><%= element.productName %></h6> 
                                    </td> 
                                    <td class="text-center"><%= element.quantity %></td> 
                                    <td class="text-end">Rs. <%= element.price %></td> 
                                    <td class="text-end">Rs.<%= element.quantity * element.price %></td> 
                                    <td>
                                        <% if (element.orderStatus === 'Delivered' ) { %>
                                          <button class="btn btn-primary returnOrder" data-product-id="<%= element._id %>" data-order-id="<%= orders[0]._id %>">Return</button>
                                          <button class="btn btn-danger cancelOrder" data-product-id="<%= element._id %>" data-order-id="<%= orders[0]._id %>" disabled>Cancel</button>
                                      
                                        <% } else if (element.orderStatus === 'Returned') { %>
                                            <button class="btn btn-danger cancelOrder" data-product-id="<%= element._id %>" data-order-id="<%= orders[0]._id %>" disabled>Cancel</button>
                                          <!-- When status is Return, no cancel button will show -->
                                        
                                        <% } else { %>
                                          <button class="btn btn-danger cancelOrder" data-product-id="<%= element._id %>" data-order-id="<%= orders[0]._id %>">Cancel</button>
                                        
                                        <% } %>
                                      </td>
                                      
                                      
                                    <td><%= element.orderStatus %></td>
                                  </tr> 
                                <% }) %>
                              </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="row">
                <div class="col-md-6 ms-auto">
                    <div class="order-summary">
                        <h5 class="mb-3">Order Summary</h5>
                        <div class="summary-item">
                            <span>Subtotal</span>
                            <span>Rs.<%= Totalprice %></span>
                        </div>
                        <div class="summary-item">
                            <span>Shipping</span>
                            <span>Free</span>
                        </div>
                        <div class="summary-item summary-total">
                            <span>Total</span>
                            <span>Rs.<%= Totalprice %></span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Back Button -->
            <div class="mt-4">
                <a href="/orders" class="btn btn-outline-primary">Back to Orders</a>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
   <!-- Add this script for SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // Use event delegation to handle all cancel buttons
  document.addEventListener('click', async (event) => {
    if (event.target.classList.contains('cancelOrder')) {
      const productId = event.target.dataset.productId;
      const orderId = event.target.dataset.orderId;

      try {
        const response = await fetch("/cancelOrder", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ orderId, productId })
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire({
            title: 'Success!',
            text: data.success,
            icon: 'success',
            confirmButtonText: 'OK'
          }).then(() => {
            location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error!',
            text: data.message || "Failed to cancel order.",
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      } catch (error) {
        console.error("Error cancelling order:", error);
        Swal.fire({
          title: 'Error!',
          text: "Something went wrong. Please try again.",
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    }
  });

  // Use event delegation to handle all return buttons
  document.addEventListener('click', async (event) => {
    if (event.target.classList.contains('returnOrder')) {
      const productId = event.target.dataset.productId;
      const orderId = event.target.dataset.orderId;

      Swal.fire({
        title: 'Confirm Return',
        text: 'Are you sure you want to return this item?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, return it!'
      }).then(async (result) => {
        if (result.isConfirmed) {
          try {
            const response = await fetch("/return-order", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ orderId, productId })
            });

            const data = await response.json();

            if (data.success) {
              Swal.fire({
                title: 'Return Requested!',
                text: 'Your return request has been submitted.',
                icon: 'success',
                confirmButtonText: 'OK'
              }).then(() => {
                location.reload();
              });
            } else {
              Swal.fire({
                title: 'Error!',
                text: data.message || "Failed to process return request.",
                icon: 'error',
                confirmButtonText: 'OK'
              });
            }
          } catch (error) {
            console.error("Error requesting return:", error);
            Swal.fire({
              title: 'Error!',
              text: "Something went wrong. Please try again.",
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        }
      });
    }
  });
</script>
</body>
</html>