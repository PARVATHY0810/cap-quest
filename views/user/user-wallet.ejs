<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CapQuest - My Wallet</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.1/dist/sweetalert2.min.css" rel="stylesheet">
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    
    <style>
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
        }

        .wallet-container {
            padding: 40px 20px;
            max-width: 1000px;
            margin: 0 auto;
        }

        .wallet-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .wallet-balance-card {
            background: linear-gradient(45deg, #ff6f00, #ff8c33);
            border-radius: 20px;
            padding: 30px;
            color: white;
            box-shadow: 0 10px 20px rgba(255, 111, 0, 0.3);
            position: relative;
            overflow: hidden;
            transition: transform 0.3s ease;
        }

        .wallet-balance-card:hover {
            transform: translateY(-5px);
        }

        .wallet-balance-card::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: rgba(255, 255, 255, 0.1);
            transform: rotate(30deg);
        }

        .wallet-balance {
            font-size: 3rem;
            font-weight: 700;
            margin: 20px 0;
            text-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

        .add-money-btn {
            background-color: white;
            color: #ff6f00;
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .add-money-btn:hover {
            background-color: #ffe0b2;
            color: #ff6f00;
            transform: translateY(-2px);
        }

        .transaction-table {
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.05);
            overflow: hidden;
            margin-top: 30px;
        }

        .card-header {
            background: #fff;
            padding: 20px 30px;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

        .table {
            margin-bottom: 0;
        }

        .table th {
            border-bottom: 2px solid #eee;
            padding: 20px 30px;
            color: #666;
            font-weight: 600;
        }

        .table td {
            padding: 20px 30px;
            vertical-align: middle;
            border-top: 1px solid #f5f5f5;
        }

        .breadcrumb {
            background: rgba(255,255,255,0.8);
            padding: 15px 25px;
            border-radius: 15px;
            backdrop-filter: blur(5px);
        }

        .breadcrumb-item a {
            color: #ff6f00;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .breadcrumb-item a:hover {
            color: #ff8c33;
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 12px;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .status-success {
            background: #e6ffe6;
            color: #00cc00;
        }

        .status-debit {
            background: #ffe6e6;
            color: #ff3333;
        }

        @media (max-width: 768px) {
            .wallet-balance {
                font-size: 2rem;
            }
            .table td, .table th {
                padding: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="wallet-container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/profile"><i class="fas fa-user me-2"></i>Profile</a></li>
                <li class="breadcrumb-item active" aria-current="page"><i class="fas fa-wallet me-2"></i>Wallet</li>
            </ol>
        </nav>

        <div class="wallet-header">
            <h2 class="mb-0" style="color: #333; font-weight: 700;">My Wallet</h2>
            <p class="text-muted">Manage your funds with ease</p>
        </div>
        
        <div class="wallet-balance-card mb-4">
            <h4 class="mb-3" style="opacity: 0.9;">Current Balance</h4>
            <div class="wallet-balance">₹<%= wallet.balance.toFixed(2) %></div>
            <button id="addMoneyBtn" class="add-money-btn" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
              <i class="fas fa-plus me-2"></i>Add Money
            </button>
          </div>
          
          <div class="card transaction-table">
            <div class="card-header">
              <h4 class="mb-0"><i class="fas fa-history me-2"></i>Transaction History</h4>
            </div>
            <div class="card-body p-0">
              <table class="table">
                <thead>
                  <tr>
                    <th>Date</th>
                    <th>Description</th>
                    <th>Amount</th>
                    <th>Status</th>
                  </tr>
                </thead>
                <tbody>
                  <% transactions.forEach(transaction => { %>
                    <tr>
                      <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                      <td><%= transaction.description %></td>
                      <td class="<%= transaction.type === 'credit' ? 'text-success' : 'text-danger' %> fw-bold">
                        <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                      </td>
                      <td>
                        <span class="status-badge <%= transaction.type === 'credit' ? 'status-success' : 'status-debit' %>">
                          <%= transaction.type === 'credit' ? 'Success' : 'Debit' %>
                        </span>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          </div>
    </div>
    
    <!-- Add Money Modal (Insert here) -->
    <div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addMoneyModalLabel">Add Money to Wallet</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addMoneyForm">
                        <div class="mb-3">
                            <label for="amount" class="form-label">Amount (₹)</label>
                            <input type="number" class="form-control" id="amount" name="amount" placeholder="Enter amount" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Proceed to Pay</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <!-- Update this part in your user-wallet.ejs file -->
<script>
    document.getElementById('addMoneyForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const amount = document.getElementById('amount').value;
      
      if (amount < 1) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Amount',
          text: 'Please enter an amount greater than ₹0'
        });
        return;
      }
      
      try {
        // Step 1: Create order
        const orderResponse = await fetch('/wallet/add-money', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ amount })
        });
        
        const orderData = await orderResponse.json();
        
        if (!orderData.success) {
          throw new Error(orderData.error || 'Failed to create order');
        }
        
        // Step 2: Initialize Razorpay
        const options = {
          key: orderData.keyId,
          amount: orderData.order.amount,
          currency: orderData.order.currency,
          name: 'CapQuest',
          description: 'Wallet Recharge',
          order_id: orderData.order.id,
          handler: async function(response) {
            // Step 3: Verify payment
            const verifyResponse = await fetch('/wallet/verify-payment', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                razorpay_order_id: response.razorpay_order_id,
                razorpay_payment_id: response.razorpay_payment_id,
                razorpay_signature: response.razorpay_signature
              })
            });
            
            const verifyData = await verifyResponse.json();
            
            if (verifyData.success) {
              Swal.fire({
                icon: 'success',
                title: 'Payment Successful',
                text: `₹${amount} has been added to your wallet`,
                confirmButtonText: 'OK'
              }).then(() => {
                window.location.reload();
              });
            } else {
              throw new Error('Payment verification failed');
            }
          },
          // Make sure you have these details available or remove them
          prefill: {
            name: '<%= typeof user.name !== "undefined" ? user.name : "" %>',
            email: '<%= typeof user.email !== "undefined" ? user.email : "" %>'
          },
          theme: {
            color: '#ff6f00'
          },
          modal: {
            ondismiss: function() {
              console.log('Payment cancelled');
            }
          }
        };
        
        const razorpayInstance = new Razorpay(options);
        razorpayInstance.open();
        
        // Close the modal
        bootstrap.Modal.getInstance(document.getElementById('addMoneyModal')).hide();
      } catch (error) {
        console.error('Error:', error);
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: error.message || 'Something went wrong!'
        });
      }
    });
  </script>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.1/dist/sweetalert2.all.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</body>
</html>