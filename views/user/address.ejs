<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Address Management</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
        }

        .container {
            max-width: 800px;
            padding: 40px 20px;
        }

        h2 {
            color: #333;
            font-weight: 700;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .btn-primary {
            background: linear-gradient(45deg, #ff6f00, #ff8c33);
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .btn-primary:hover {
            background: linear-gradient(45deg, #ff8c33, #ffa64d);
            transform: translateY(-2px);
        }

        .address-box {
            background: linear-gradient(45deg, #ff6f00, #ff8c33);
            padding: 25px;
            border-radius: 20px;
            box-shadow: 0 10px 20px rgba(255, 111, 0, 0.3);
            color: white;
            position: relative;
            margin-bottom: 25px;
            transition: transform 0.3s ease;
            overflow: hidden;
        }

        .address-box:hover {
            transform: translateY(-5px);
        }

        .address-box::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: rgba(255, 255, 255, 0.1);
            transform: rotate(30deg);
        }

        .action-buttons {
            position: absolute;
            top: 15px;
            right: 15px;
            display: flex;
            gap: 10px;
        }

        .btn-warning {
            background-color: #fff;
            color: #ff6f00;
            border: none;
            padding: 6px 15px;
            border-radius: 15px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .btn-warning:hover {
            background-color: #ffe0b2;
            color: #ff6f00;
        }

        .delete-btn {
            background-color: #fff;
            color: #ff3333;
            border: none;
            padding: 6px 15px;
            border-radius: 15px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .delete-btn:hover {
            background-color: #ffe6e6;
            color: #cc0000;
        }

        h5 {
            font-weight: 700;
            margin-bottom: 15px;
            text-shadow: 0 1px 2px rgba(0,0,0,0.2);
        }

        h6 {
            margin: 8px 0;
            opacity: 0.9;
            font-size: 0.95rem;
        }

        .text-muted {
            background: rgba(255,255,255,0.8);
            padding: 15px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }

        @media (max-width: 768px) {
            .address-box {
                padding: 20px;
            }
            h5 {
                font-size: 1.25rem;
            }
            h6 {
                font-size: 0.9rem;
            }
            .action-buttons {
                flex-direction: column;
                gap: 5px;
            }
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/profile">Profile</a></li>
                <li class="breadcrumb-item active" aria-current="page">Address</li>
            </ol>
        </nav>
        <h2 class="text-center text-primary"><i class="fas fa-map-marker-alt me-2"></i>Address Management</h2>
        <div class="text-center mb-3">
            <a href="/addAddress" class="btn btn-primary"><i class="fas fa-plus me-2"></i>Add Address</a>
        </div>

        <div id="addressList">
          <% if (addressData && addressData.length > 0) { %>
              <% addressData.forEach(element => { %>
                  <div class="address-box">
                      <div class="action-buttons">
                          <a href="/editAddress/<%= element._id %>" class="btn btn-warning btn-sm"><i class="fas fa-edit me-1"></i>Edit</a>
                          <button class="delete-btn" onclick="deleteAddress('<%= element._id %>')"><i class="fas fa-trash me-1"></i>Delete</button>
                      </div>
                      <h5><%= element.name %></h5>
                      <h6><i class="fas fa-home me-2"></i>Type: <%= element.addressType %></h6>
                      <h6><i class="fas fa-city me-2"></i>City: <%= element.city %></h6>
                      <h6><i class="fas fa-map-pin me-2"></i>Landmark: <%= element.landmark %></h6>
                      <h6><i class="fas fa-flag me-2"></i>State: <%= element.state %></h6>
                      <h6><i class="fas fa-phone me-2"></i>Phone: +91 <%= element.phone %></h6>
                  </div>
              <% }) %>
          <% } else { %>
              <p class="text-center text-muted"><i class="fas fa-exclamation-circle me-2"></i>No addresses found.</p>
          <% } %>
      </div>
    </div>

    <script>
        async function deleteAddress(addressId) {
            console.log("Trying to delete address with ID:", addressId);
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#0653cc',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            });
            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/deleteAddress/${addressId}`, {
    method: 'DELETE',
    headers: { 'Content-Type': 'application/json' }
});

                    const data = await response.json();
                    if (response.ok) {
                        await Swal.fire({
                            title: 'Deleted!',
                            text: 'Address has been deleted.',
                            icon: 'success',
                            confirmButtonColor: '#0653cc'
                        });
                        window.location.reload();
                    } else {
                        await Swal.fire({
                            title: 'Error!',
                            text: data.error || 'Failed to delete Address',
                            icon: 'error',
                            confirmButtonColor: '#0653cc'
                        });
                    }
                } catch (error) {
                    console.error("Fetch error:", error);
                    await Swal.fire({
                        title: 'Error!',
                        text: 'An error occurred',
                        icon: 'error',
                        confirmButtonColor: '#0653cc'
                    });
                }
            }
        }
    </script>
</body>
</html>